import SwiftUI
import WidgetKit

@main
struct LiveActivityWidgetBundle: WidgetBundle {
  @WidgetBundleBuilder
  var body: some Widget {
    if #available(iOSApplicationExtension 16.1, *) {
      LiveActivityWidget()
    } else {
      // Optionally, provide a fallback widget or empty view
      EmptyWidget()
    }
  }
}

// Fallback empty widget if needed
struct EmptyWidget: Widget {
  var body: some WidgetConfiguration {
    StaticConfiguration(kind: "EmptyWidget", provider: Provider()) { _ in
      Text("Not supported")
    }
    .configurationDisplayName("Empty")
    .description("Live Activity not supported on this iOS version.")
  }
}

struct Provider: TimelineProvider {
  func placeholder(in context: Context) -> SimpleEntry {
    SimpleEntry(date: Date())
  }
  
  func getSnapshot(in context: Context, completion: @escaping (SimpleEntry) -> ()) {
    completion(SimpleEntry(date: Date()))
  }
  
  func getTimeline(in context: Context, completion: @escaping (Timeline<SimpleEntry>) -> ()) {
    let timeline = Timeline(entries: [SimpleEntry(date: Date())], policy: .never)
    completion(timeline)
  }
}

struct SimpleEntry: TimelineEntry {
  let date: Date
}
